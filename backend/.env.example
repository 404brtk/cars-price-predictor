# ---------------------------------
# Backend (Django) Configuration
# ---------------------------------

# --- Security ---
# Generate a new key for production.
# Use: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=django-secret-key

# Set to False in production
DEBUG=True

# --- Host Configuration ---
# Comma-separated list of allowed hosts
ALLOWED_HOSTS=localhost,127.0.0.1

# --- CORS (Cross-Origin Resource Sharing) ---
# Comma-separated list of frontend origins to allow
CORS_ALLOWED_ORIGINS=http://localhost:3000
# Set to True to allow all origins (not recommended for production)
CORS_ALLOW_ALL_ORIGINS=False
# Set to True to allow credentials (cookies, authorization headers)
CORS_ALLOW_CREDENTIALS=True

# --- CSRF (Cross-Site Request Forgery) ---
# Comma-separated list of trusted origins for CSRF
CSRF_TRUSTED_ORIGINS=http://localhost:3000
# SameSite setting for the CSRF cookie ('Lax', 'Strict', 'None')
CSRF_COOKIE_SAMESITE=Lax
# Whether the CSRF cookie is HttpOnly (must be False to be read by JS)
CSRF_COOKIE_HTTPONLY=False

# --- JWT (JSON Web Token) Cookie Settings ---
ACCESS_TOKEN_COOKIE_NAME=access_token
REFRESH_TOKEN_COOKIE_NAME=refresh_token
# Whether JWT cookies are HttpOnly (recommended True)
JWT_COOKIE_HTTPONLY=True
# SameSite setting for JWT cookies ('Lax', 'Strict', 'None')
JWT_COOKIE_SAMESITE=Lax
JWT_ACCESS_TOKEN_COOKIE_PATH=/api/
JWT_REFRESH_TOKEN_COOKIE_PATH=/api/

# --- JWT Lifetime ---
ACCESS_TOKEN_LIFETIME_MINUTES=30
REFRESH_TOKEN_LIFETIME_DAYS=7

# --- Database (PostgreSQL) ---
DB_NAME=cars_price_predictor
DB_USER=db
DB_PASSWORD=your_db_password
DB_HOST=db
DB_PORT=5432

# Should correspond to those declared above
POSTGRES_DB=cars_price_predictor      # DB_NAME
POSTGRES_USER=db                      # DB_USER
POSTGRES_PASSWORD=your_db_password    # DB_PASSWORD